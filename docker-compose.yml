version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.5.2
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100 # make kafka more responsible
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.2
    hostname: schema-registry
    depends_on:
      - broker
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181

#  kafka-connect:
#    image: spanconnector/kafka-spanner-connector:latest
#    hostname: kafka-connect
#    depends_on:
#      - broker
#      - schema-registry
#    #don't expose port for testcontainers, testcontainers mixs ports, wait strategy doesn't work correct
#    #ports:
#    #  - "8083:8083"
#    #  - "5005:5005"
#    #  - "8086:8080" #metrics related port
#
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
#      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
#      CONNECT_REST_PORT: 8083
#      CONNECT_GROUP_ID: kafka-connect
#      CONNECT_CONFIG_STORAGE_TOPIC: _kafka-connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: _kafka-connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: _kafka-connect-status
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter #io.confluent.connect.avro.AvroConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
#      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter #io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
#      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
#      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR,io.debezium.connector.spanner=DEBUG"
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
#      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
#      KAFKA_DEBUG: "y"
#      JAVA_DEBUG_PORT: "*:5005"
#      DEBUG_SUSPEND_FLAG: "n"
#      KAFKA_OPTS: -javaagent:/usr/share/prometheus/jmx_prometheus_javaagent.jar=8080:/usr/share/prometheus/metrics-config.yml
#      LOG_DIR: '/x-logs'
#    volumes:
#      - ./logs:/x-logs
#    command:
#      - bash
#      - -c
#      - |
#        echo "Launching Kafka Connect worker"
#        /etc/confluent/docker/run &
#        #
#        sleep infinity
#  generator:
#    image: spanconnector/spanner-load-generator:latest
#    hostname: generator

  akhq:
    image: tchiotludo/akhq
    depends_on:
      - broker
      - schema-registry
      - kafka-connect
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-connect-server:
              properties:
                bootstrap.servers: "broker:29092"
#              schema-registry:
#                url: "http://schema-registry:8081"
#              connect:
#                - name: "kafka-connect"
#                  url: "http://kafka-connect:8083"
    ports:
      - "9001:8080"
